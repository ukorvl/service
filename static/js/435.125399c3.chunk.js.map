{"version":3,"file":"static/js/435.125399c3.chunk.js","mappings":"uQACA,GAAgB,IAAM,mBAAmB,KAAO,qB,6BC+EhD,EAzDkB,WAChB,OAA2DA,EAAAA,EAAAA,IAAQ,CAACC,KAAM,aAAlEC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAA2BC,EAAO,EAApBC,UAAaD,QAC7C,GAAwCE,EAAAA,EAAAA,UAAuB,YAAW,eAAnEC,EAAY,KAAEC,EAAe,KAC9BC,GAAMC,EAAAA,EAAAA,MACNC,EAAoC,aAAjBJ,EAA8B,YAAc,MAI/DK,GAAeC,EAAAA,EAAAA,cAAY,WAC/BJ,EAAI,IAAK,CAACK,SAAS,GACrB,GAAG,CAACL,IAEJ,OACE,SAACM,EAAA,EAAS,CACRC,OAAK,EACLC,UAAS,wBAAmBC,EAAAA,SAAiB,UAE7C,SAACC,EAAA,EAAG,CAACF,UAAS,+CAAiD,UAC7D,UAACG,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGL,UAAWC,EAAAA,IAAW,WACxC,eAAID,UAAU,OAAM,yFACpB,SAACM,EAAA,EAAI,CAACC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,WAAY,WAAY,UACrE,SAACJ,EAAA,OAAS,WACR,UAACK,EAAA,EAAI,CAACC,SAAU1B,EAAaS,GAAc,WACzC,UAACgB,EAAA,QAAU,CAACX,UAAU,OAAOa,UAAU,iBAAgB,WACrD,SAACF,EAAA,QAAU,sJACX,SAACA,EAAA,WAAY,QAACG,KAAK,QAAQC,YAAY,eACnC9B,EAAS,QAAS,CAAE+B,UAAU,EAAMC,SAAU,SAAAC,GAAC,MAvCvD,SAuC2DA,CAAW,OAElE,SAACP,EAAA,OAAS,CAACX,UAAU,mBAGvB,SAACW,EAAA,QAAU,oDACX,UAACQ,EAAA,EAAU,CAACnB,UAAU,OAAM,WAC1B,SAACW,EAAA,WAAY,QACXI,YAAY,kFACZD,KAAMxB,GACFL,EAAS,WAAY,CAAE+B,UAAU,EAAMC,SAAU,SAAAC,GAAC,MAhDzD,mBAgD6DA,CAAc,OAE1E,SAACE,EAAA,EAAM,CAACC,QAjCG,WAAH,OACtB9B,EAAiC,aAAjBD,EAA8B,OAAS,WAAY,EAgChBgC,QAAQ,YAAW,UACxD,SAAC,IAAe,CACVC,KAAK,KACLC,KAAM,CAAC,MAAO9B,WAItB,SAAC0B,EAAA,EAAM,CAACpB,UAAU,OAAOsB,QAAQ,UAAUR,KAAK,SAASW,UAAWtC,EAAQ,yDAU5F,C","sources":["webpack://great.do/./src/views/styles/login.module.scss?e914","views/LoginView.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"login_img__H2lth\",\"card\":\"login_card__2sN9q\"};","import { ReactElement, useState, useCallback } from 'react';\nimport { Col, Container, InputGroup, Row } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './styles/login.module.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nconst login = 'user';\nconst password = 'aiE3V3kD02Pds$';\n\n/**\n * Password input type.\n */\ntype PwdInputType = 'password' | 'text';\n\n/**\n * Login view.\n *\n * @returns React component.\n */\nconst LoginView = (): ReactElement => {\n  const { register, handleSubmit, formState: { isValid } } = useForm({mode: 'onChange'});\n  const [pwdInputType, setPwdInputType] = useState<PwdInputType>('password');\n  const nav = useNavigate();\n  const pwdInputIconName = pwdInputType === 'password' ? 'eye-slash' : 'eye';\n  const switchPwdInputType = () =>\n    setPwdInputType(pwdInputType === 'password' ? 'text' : 'password');\n\n  const processlogin = useCallback(() => {\n    nav('/', {replace: true});\n  }, [nav]);\n\n  return (\n    <Container\n      fluid\n      className={`text-bg-light ${styles.content}`}\n    >\n      <Row className={`text-center justify-content-center pb-5 pt-5`}>\n        <Col xs={12} md={4} className={styles.col}>\n          <h1 className='mb-4'>Вход в систему</h1>\n          <Card style={{ width: '100%', height: '20rem', background: '#f2f2f2' }}>\n            <Card.Body>\n              <Form onSubmit={handleSubmit(processlogin)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Введите имя пользователя</Form.Label>\n                  <Form.Control type=\"login\" placeholder=\"Enter email\"\n                  {...register(\"login\", { required: true, validate: x => x === login })}\n                  />\n                  <Form.Text className=\"text-muted\">\n                  </Form.Text>\n                </Form.Group>\n                <Form.Label>Пароль</Form.Label>\n                <InputGroup className=\"mb-3\">\n                  <Form.Control\n                    placeholder=\"Введите пароль\"\n                    type={pwdInputType}\n                    {...register(\"password\", { required: true, validate: x => x === password })}\n                  />\n                  <Button onClick={switchPwdInputType} variant=\"secondary\">\n                  <FontAwesomeIcon\n                        size=\"1x\"\n                        icon={['fas', pwdInputIconName]}\n                      />\n                  </Button>\n                </InputGroup>\n                <Button className=\"mt-5\" variant=\"primary\" type=\"submit\" disabled={!isValid}>\n                  Логин\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LoginView;\n"],"names":["useForm","mode","register","handleSubmit","isValid","formState","useState","pwdInputType","setPwdInputType","nav","useNavigate","pwdInputIconName","processlogin","useCallback","replace","Container","fluid","className","styles","Row","Col","xs","md","Card","style","width","height","background","Form","onSubmit","controlId","type","placeholder","required","validate","x","InputGroup","Button","onClick","variant","size","icon","disabled"],"sourceRoot":""}